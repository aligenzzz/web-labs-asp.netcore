@inject IDataService DataService
@implements IDisposable

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(DataService.CurrentPage == 1 ? "disabled" : "")">
            <button class="page-link" @onclick="(async () => await SelectPage(1))">
                First
            </button>
        </li>
        <li class="page-item @(DataService.CurrentPage == 1 ? "disabled" : "")">
            <button class="page-link" @onclick="(async () => await SelectPage(previousPage))">
                Previous
            </button>
        </li>

        @for (int i = 1; i <= DataService.TotalPages; i++)
        {
            int pageno = i;
            <li class="page-item @(i == DataService.CurrentPage ? "active" : "")">
                <button class="page-link" @onclick="(async ()=> await SelectPage(pageno))">
                    @i
                </button>
            </li>
        }

        <li class="page-item @(DataService.CurrentPage == DataService.TotalPages ? "disabled" : "")">
            <button class="page-link" @onclick="(async () => await SelectPage(nextPage))">
                Next
            </button>
        </li>
        <li class="page-item @(DataService.CurrentPage == DataService.TotalPages ? "disabled" : "")">
            <button class="page-link" @onclick="(async () => await SelectPage(DataService.TotalPages))">
                Last
            </button>
        </li>
    </ul>
</nav>

@code 
{
    [Parameter, EditorRequired]
    public string? Genre { get; set; }

    int previousPage;
    int nextPage;

    protected override void OnInitialized()
    {
        DataService.DataLoaded += StateHasChanged;
        SetPages();
    }

    public void Dispose()
    {
        DataService.DataLoaded -= StateHasChanged;
    }

    async Task SelectPage(int pageno)
    {
        await DataService.GetBookListAsync(Genre!, pageno);
        SetPages();
    }

    private void SetPages()
    {
        previousPage = DataService.CurrentPage == 1 ? 1 : DataService.CurrentPage - 1;

        nextPage = DataService.CurrentPage == DataService.TotalPages
                                    ? DataService.TotalPages
                                    : DataService.CurrentPage + 1;
    }
}
